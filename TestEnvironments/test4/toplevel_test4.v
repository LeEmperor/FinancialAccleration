
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module toplevel_test4(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,

	//////////// LED //////////
	output		     [8:0]		LEDG,
	output		    [17:0]		LEDR,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		    [17:0]		SW,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,
	output		     [6:0]		HEX6,
	output		     [6:0]		HEX7,

	//////////// LCD //////////
	output		          		LCD_BLON,
	inout 		     [7:0]		LCD_DATA,
	output		          		LCD_EN,
	output		          		LCD_ON,
	output		          		LCD_RS,
	output		          		LCD_RW,

	//////////// Ethernet 0 //////////
	output		          		ENET0_GTX_CLK,
	input 		          		ENET0_INT_N,
	input 		          		ENET0_LINK100,
	output		          		ENET0_MDC,
	inout 		          		ENET0_MDIO,
	output		          		ENET0_RST_N,
	input 		          		ENET0_RX_CLK,
	input 		          		ENET0_RX_COL,
	input 		          		ENET0_RX_CRS,
	input 		     [3:0]		ENET0_RX_DATA,
	input 		          		ENET0_RX_DV,
	input 		          		ENET0_RX_ER,
	input 		          		ENET0_TX_CLK,
	output		     [3:0]		ENET0_TX_DATA,
	output		          		ENET0_TX_EN,
	output		          		ENET0_TX_ER,
	input 		          		ENETCLK_25,

	//////////// Ethernet 1 //////////
	output		          		ENET1_GTX_CLK,
	input 		          		ENET1_INT_N,
	input 		          		ENET1_LINK100,
	output		          		ENET1_MDC,
	inout 		          		ENET1_MDIO,
	output		          		ENET1_RST_N,
	input 		          		ENET1_RX_CLK,
	input 		          		ENET1_RX_COL,
	input 		          		ENET1_RX_CRS,
	input 		     [3:0]		ENET1_RX_DATA,
	input 		          		ENET1_RX_DV,
	input 		          		ENET1_RX_ER,
	input 		          		ENET1_TX_CLK,
	output		     [3:0]		ENET1_TX_DATA,
	output		          		ENET1_TX_EN,
	output		          		ENET1_TX_ER
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

// test1 (
//   .a(SW[15]),
//   .b(SW[14]),
//   .c(LEDR[7])
// );

wire [15:0] wire_data;
wire wire_valid;
wire wire_ready;

display u_display (
    .clk_hifreq (CLOCK_50),
    .rst        (SW[17]),

    .data_in    (wire_data),
    .valid      (wire_valid),
    .ready      (wire_ready),

    .switches   (SW[16:0]),
    .buttons    (KEY[3:0]),
    .leds_green (LEDG[7:0]),
    .leds_red   (LEDR[17:0]),

    .hex0       (),
    .hex1       (),
    .hex2       (),
    .hex3       (),
    .hex4       (),
    .hex5       (),
    .hex6       (),
    .hex7       ()
);

source u_source (
  .clk_hifreq (CLOCK_50),
  .rst        (SW[17]),

  .data_out   (wire_data),  // source is 16 bits, map into lower 16
  .valid      (wire_valid),
  .ready      (wire_ready)
);

//=======================================================
//  Structural coding
//=======================================================

master_source source (

  // eth0 connections
  .eth0

	input 		          		ENET0_TX_CLK,
	output		     [3:0]		ENET0_TX_DATA,
	output		          		ENET0_TX_EN,
	output		          		ENET0_TX_ER,

);

master_sink sink (

);

endmodule

